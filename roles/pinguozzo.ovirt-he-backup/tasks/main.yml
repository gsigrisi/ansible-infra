---
- name: include vars
  include_vars: "{{ item }}.yml"
  loop:
    - engine_vars
    - telegram
    - nfs

- name: "set backup_filename fact"
  set_fact:
    backup_filename: "{{ nfs_mount }}/{{ nfs_path }}/he-backup-{{ ansible_date_time.date }}"

- name: Create backup directroy structure if not exists
  ansible.builtin.file:
    path: "{{ nfs_mount }}/{{ nfs_path }}"
    state: directory
    mode: '0755'

- name: "ensure NFS Backup share is mounted"
  mount: name={{nfs_mount}} src={{nfs_server}}:/{{ nfs_export }} fstype=nfs state=mounted

- name: "check if backup already run"
  stat:
    path: "{{ backup_filename }}"
  register: he_backup_done

- name: "run he backup Full"
  shell: engine-backup --scope=all --mode=backup --file="{{ backup_filename }}" --log=/var/log/he-backup-"{{ ansible_date_time.date }}".log
  register: he_backup
  ignore_errors: False
  when: he_backup_done.stat.path is not defined

- name: "get backup status"
  debug: msg="Backup completed successfully"
  when: he_backup is defined and 'rc' in he_backup and he_backup.rc == 0

- name: "notify via telegram"
  community.general.telegram:
    token: "{{ pinguobot_token }}"
    api_args:
      chat_id: "{{ pinguobot_chatid }}"
      text: "ovirt-engine backup completed successfully"
      parse_mode: "markdown"
      disable_web_page_preview: true
      disable_notification: true
  when: he_backup is defined and 'rc' in he_backup and he_backup.rc == 0

- name: "find backups older then {{ retention_days }}"
  find:
    paths: "{{ nfs_mount }}/{{ nfs_path }}/"
    age: "{{ retention_days }}"
    recurse: yes
  register: files_to_delete

- name: "he backup files to be deleted"
  debug: var=item.path
  with_items: "{{ files_to_delete.files }}"

- name: "delete old he backup files"
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"

- name: "umount nfs Backup share"
  mount: name={{ nfs_mount }} src={{nfs_server}}:/{{ nfs_export }} fstype=nfs state=unmounted
