---
- name: Satellite ansible installer
  hosts: "{{ targeted_host| default('localhost') }}"
  become: true
  gather_facts: true

  vars:
    satellite_installer_scenario: satellite
    satellite_firewall_zone: public
    satellite_installer_options:
      - '{{ tuning_options }}'
      - '--foreman-initial-organization "{{ satellite_organization }}"'
      - '--foreman-initial-admin-password "{{ satellite_password }}"'
      - '--no-colors'
      - '-s'
      - '--enable-foreman-plugin-rh-cloud'
      - '--enable-foreman-plugin-remote-execution'
      - '--enable-foreman-plugin-openscap'
      - '--enable-foreman-proxy-plugin-openscap'
      - '--no-enable-foreman-plugin-discovery'
      - '--no-enable-foreman-proxy-plugin-discovery'
      - '--foreman-plugin-tasks-automatic-cleanup true'

  pre_tasks:
    - name: Ensure host is registered
      community.general.redhat_subscription:
        state: present
        activationkey: ak-capsule
        org_id: pinguozzo
        force_register: true
        syspurpose:
          usage: "Development"
          role: "Red Hat Enterprise Linux Server"
          service_level_agreement: "Self-Support"
          sync: true
      when: set_force_register | bool

        # - name: enable red hat satellite required repos
        #   community.general.rhsm_repository:
        #     name: "{{ item }}"
        #   loop: "{{ satellite_repos | flatten(levels=1) }}"
        #   when: satellite_installer_scenario == 'satellite'

    - name: Reset satellite module stream
      command: >
        dnf -y module reset satellite:el{{ ansible_facts.distribution_major_version }} postgresql ruby
      when:
        - set_fresh_install | bool
        - ansible_distribution_major_version == 8

    - name: Enable satellite module stream
      command: >
        dnf -y module enable satellite:el{{ ansible_facts.distribution_major_version }}
      when: ansible_distribution_major_version == 8

    - name: Install satellite packages
      yum:
        name:
          - firewalld
          - glibc-langpack-en
          - insights-client
          - rhc
          - rhc-worker-playbook
          - satellite
          - sos
          - git
        state: present

    - name: Enable firewalld service
      service:
        name: firewalld
        enabled: true
    - name: Start firewalld service
      service:
        name: firewalld
        state: started

    - name: Configure Satellite firewall
      ansible.posix.firewalld:
        zone: "{{ satellite_firewall_zone }}"
        service: RH-Satellite-6
        permanent: true
        immediate: true
        state: enabled
      vars:
        ansible_python_interpreter: /bin/python3

  roles:
    - role: redhat.satellite_operations.installer
