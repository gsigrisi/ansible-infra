---
- name: create ipxe based host
  hosts: "{{ targeted_host| default('localhost') }}"

  module_defaults:
    redhat.satellite.host:
      username: "{{ satellite_username }}"
      password: "{{ satellite_password }}"
      server_url: "{{ satellite_server_url }}"
      location: "{{ satellite_location }}"
      organization: "{{ satellite_organization }}"
      validate_certs: no

  vars_files:
    - "{{ playbook_dir }}/../../vaults/{{ env }}-vault.yml"

  vars:
    hg_name: []
    domain_name: "{{ satellite_domain }}"
    num_instances: 1  

  pre_tasks:
    - name: check that required variables are defined
      ansible.builtin.assert:
        that: 
          - domain_name is defined
          - hg_name is defined
        fail_msg: "domain and hg_name must be defined"

  tasks:
    - name: create host(s)
      redhat.satellite.host:
        hostgroup: "{{ hg_name }}"
        name: "{{ vm_name | default(lookup('community.general.random_pet'), true) ~ (vm_name is defined and num_instances | int > 1 )|ternary(item, '') ~ '.' ~ domain_name }}"
        state: present
        build: true
        compute_attributes:
          start: "1"
      register: output      
      with_sequence: start=1 end="{{ num_instances|default(1) }}"

    - name: host fqdn
      debug:
        msg: "New VM: {{ output | community.general.json_query('results[*].entity.hosts[*].name') | join('')}}"

# ansible-playbook playbooks/pinguozzo.satellite/create-host-ipxe.yml -e num_instances=2 # it will create 2 instances with random names 
# ansible-playbook playbooks/pinguozzo.satellite/create-host-ipxe.yml -e num_instances=2 -e vm_name=node # it will create 2 instances with hostname: node1, node2
# name: "{{ lookup('ansible.builtin.vars','vm_name' , default=lookup('community.general.random_pet')) + (vm_name is defined)|ternary(item, '') + '.' + domain_name }}"
